#!/usr/bin/env python2.7
#Pong.py
#A two player game of pong. Press space to start the ball moving. Use the arrow keys and/or WASD to move.
#Robert H
#1/14/16
import pygame
import sys
import time
from pygame.locals import *


def drawNet(): #Drawing the line through the center
    pygame.draw.rect(screen, (0, 0, 0), net)

def drawScreen(): #Making the screen white
    screen.fill((255, 255, 255))
def drawPlayerOne(): #Making the first player
    pygame.draw.rect(screen, (0, 0, 0), playerOne)
def drawPlayerTwo(): #Making the second player
    pygame.draw.rect(screen, (0, 0, 0), playerTwo)

def drawScoreOne(displayString, font, surface, x, y): #Drawing player one's score
    displayText = font.render(displayString, 1, (0, 0, 0))
    textRect = displayText.get_rect()
    textRect.topleft = (x, y)
    surface.blit(displayText, textRect)
def drawScoreTwo(displayString, font, surface, x, y): #Drawing player two's score
    displayText = font.render(displayString, 1, (0, 0, 0))
    textRect = displayText.get_rect()
    textRect.topright = (x, y)
    surface.blit(displayText, textRect)
#Winning texts
def drawPlayerOneWin(displayString, font, surface, x, y): #Drawing player one's winning text
	displayText = font.render(displayString, 1, (0, 0, 0))
	textRect = displayText.get_rect()
	textRect.center = (x, y)
	surface.blit(displayText, textRect)
def drawPlayerTwoWin(displayString, font, surface, x, y): #Drawing player two's winning text
	displayText = font.render(displayString, 1, (0, 0, 0))
	textRect = displayText.get_rect()
	textRect.center = (x, y)
	surface.blit(displayText, textRect)
	
#Checking to see if someone won
def hasWon():
	if scoreOne >= 5:
		drawPlayerOneWin((playerOneWins), font, screen, 320, 140)
		pygame.display.flip()
		time.sleep(5)
		pygame.quit()
		sys.exit()
		
	if scoreTwo >= 5:
		drawPlayerTwoWin((playerTwoWins), font, screen, 320, 320)
		pygame.display.flip()
		time.sleep(5)
		pygame.quit()
		sys.exit()
		
#Entry point
if __name__ == "__main__":
	pygame.init()
	
	screenSize = [640, 460] #Setting the value for the screen size
	
	playerOneWins = "Player 1 Wins!"
	playerTwoWins = "Player 2 Wins!"

	screen = pygame.display.set_mode(screenSize) #Window size
	screen.fill((255, 255, 255)) #Background
	pygame.display.set_caption('Pong') #Name
	font = pygame.font.SysFont(None, 36)

	playerOne = pygame.Rect(280, 50, 90, 10) #Paddle colors and sizes
	playerTwo = pygame.Rect(280, 410, 90, 10)
	playerOneSpeed = 7 #Speed that the players move at
	playerTwoSpeed = 7
	netX = 0
	net = pygame.Rect(netX, 210, 640, 2)



	moveLeftOne = False
	moveRightOne = False
	moveLeftTwo = False
	moveRightTwo = False

	mainClock = pygame.time.Clock()

	scoreOne = 0
	scoreTwo = 0

	#Ball Start and Movement
	xPos = 320
	yPos = 320
	lastXPos = xPos
	lastYPos = yPos
	ballCanMove = False

	speed = [5, -5] #Speed the ball moves at

	while True:
		# check for events
		for event in pygame.event.get():
			if event.type == QUIT:
				pygame.quit()
				sys.exit()
			hasWon()
	

			# Inputs
			if event.type == KEYDOWN:

				if event.key == K_a:
					moveLeftOne = True
					moveRightOne = False
				if event.key == K_d:
					moveLeftOne = False
					moveRightOne = True

				if event.key == K_LEFT:
					moveLeftTwo = True
					moveRightTwo = False
				if event.key == K_RIGHT:
					moveLeftTwo = False
					moveRightTwo = True



			if event.type == KEYUP:
				if event.key == K_a:
					moveLeftOne = False
				if event.key == K_d:
					moveRightOne = False

				if event.key == K_LEFT:
					moveLeftTwo = False
				if event.key == K_RIGHT:
					moveRightTwo = False
				# Releasing the ball
				if event.key == K_SPACE:
					ballCanMove = True

		mainClock.tick(60) #Tickrate (fps)

		if moveLeftOne and playerOne.left > 0:
			playerOne.x -= playerOneSpeed
		if moveRightOne and playerOne.right < 640:
			playerOne.x += playerOneSpeed
		if moveLeftTwo and playerTwo.left > 0:
			playerTwo.x -= playerTwoSpeed
		if moveRightTwo and playerTwo.right < 640:
			playerTwo.x += playerTwoSpeed

		if ballCanMove: #Letting the ball move
			lastXPos = xPos
			lastYPos = yPos

			xPos += speed[0]
			yPos += speed[1]
			if ball.x <= 0:
				xPos = 15
				speed[0] = -speed[0]
			if ball.x >= 640:
				xPos = 625
				speed[0] = -speed[0]
			if ball.y <= 0:
				yPos = 15
				speed[1] = -speed[1]
			if ball.y >= 420:
				yPos = 415
				speed[1] = -speed[1]

			if ball.y >= 420:
				scoreOne = scoreOne + 1
				ballCanMove = False
				xPos = 320
				yPos = 320
			if ball.y <= 0:
				scoreTwo = scoreTwo + 1
				ballCanMove = False
				xPos = 320
				yPos = 100

			if ball.colliderect(playerOne):
				yPos += 15
				speed[1] = -speed[1]
			if ball.colliderect(playerTwo):
				yPos -= 15
				speed[1] = -speed[1]

			moveDirection = ((xPos - lastXPos), (yPos - lastYPos))



		drawScreen()
		drawPlayerOne()
		drawPlayerTwo()
		drawNet()
		ball = pygame.draw.circle(screen, (0, 0, 0), (xPos, yPos), 6, 0)
		drawScoreOne('%s' % (scoreOne), font, screen, 10, 5)
		drawScoreTwo('%s' % (scoreTwo), font, screen, 25, 415)
		
		pygame.display.update()
		
